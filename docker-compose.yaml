# docker-compose.yml
version: "3"
services:
  nodejs:
    build: .
    environment:
      NODE_ENV: production
      DB_HOST: $DB_HOST
      DB_PORT: 5432
      DB_NAME: postgres
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      PORT: 3000
    ports:
      - "3000:3000"
    command: npm run dev
    container_name: nodejs
    volumes:
      - .:/app/
      - /app/node_modules
    networks:
      - app-network
    restart: unless-stopped
      
  nginx:
    image: nginx:1.15-alpine
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - nodejs
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    depends_on:
      - nginx
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  
networks:
  app-network:
    driver: bridge
